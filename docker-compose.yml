
version: '3.8'
services:
  db:
    image: kartoza/postgis
    environment:
      POSTGRES_USER: geodjango
      POSTGRES_PASSWORD: geodjango
      POSTGRES_DB: geodjango
    volumes:
      - postgis_data_container:/var/lib/postgresql/data
    restart: always

  web:
    build: .
    command: python manage.py runserver 0.0.0.0:8000
    volumes:
      - .:/app
    ports:
      - "8000:8000"
    depends_on:
      - db
    environment:
      - DB_HOST=db
      - DB_NAME=geodjango
      - DB_USER=geodjango
      - DB_PASS=geodjango
    restart: always

  geoserver:
    image: kartoza/geoserver
    volumes:
      - geoserver_data_dir:/data/data
    ports:
      - "8085:8085"
    restart: always

  ngnix:
    restart: always
    build:
      context: ./nginx
      dockerfile: Dockerfile.ngnx
    volumes:                 
      - static_volume:/home/app/wemast-api/static
    # - media_volume:/home/app/web/media
    ports:
      - 8700:80

networks:
  default:
    name: geo_network

volumes:
  postgis_data_container:
  geoserver_data_dir:



   

version: '3'

# services:
#   web:
#     restart: always
#     build: ./web
#     expose:
#       - "8000"
#     links:
#       - postgres:postgres
#       - redis:redis
#     volumes:
#       - web-static:/usr/src/app/static
#     env_file: .env
#     command: /usr/local/bin/gunicorn docker_django.wsgi:application -w 2 -b :8000

#   nginx:
#     restart: always
#     build: ./nginx/
#     ports:
#       - "80:80"
#     volumes:
#       - web-static:/www/static
#     links:
#       - web:web

#   postgres:
#     restart: always
#     image: postgres:latest
#     ports:
#       - "5432"
#     volumes:
#       - pgdata:/var/lib/postgresql/data/

#   redis:
#     restart: always
#     image: redis:latest
#     ports:
#       - "6379"
#     volumes:
#       - redisdata:/data

# volumes:
#   web-static:
#   pgdata:
#   redisdata: